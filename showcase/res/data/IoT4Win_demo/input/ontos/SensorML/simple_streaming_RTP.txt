
SensorML 2.0 Examples
Simple Streaming - RTP

The previous example showed an example of a sensor that outputted a simple stream of time and temperature. The measurement values were accessed by an html link (expressed in the xlink:href attribute of swe:values) which provided the last measurement value. It is possible, however, to support continuous streaming of real-time with html as well.

The example below, however, provides a link to a stream provider that uses Real-Time Protocol (RTP). There are various other protocols that could be supported by a SensorML description. In anything but the simplest cases, these interface protocols should be described in the sml:interfaceProperties element of the sml:DataInterface object.
?
	
<?xml version="1.0" encoding="UTF-8"?>
<sml:PhysicalComponent gml:id="MY_SENSOR"
   xmlns:sml="http://www.opengis.net/sensorml/2.0"
   xmlns:swe="http://www.opengis.net/swe/2.0"
   xmlns:gml="http://www.opengis.net/gml/3.2"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xmlns:xlink="http://www.w3.org/1999/xlink"
   xsi:schemaLocation="http://www.opengis.net/sensorml/2.0 http://schemas.opengis.net/sensorml/2.0/sensorML.xsd">
   <!-- ================================================= -->
   <!--                  System Description               -->
   <!-- ================================================= -->
   <gml:description>A Health 2070 Gamma detector</gml:description>
   <gml:identifier codeSpace="uniqueID">urn:myRadationNet:stations:76455</gml:identifier>
 
   <!-- metadata deleted for brevity sake -->
 
   <!-- ================================================= -->
   <!--             Observed Property = Output            -->
   <!-- ================================================= -->
   <sml:outputs>
      <sml:OutputList>
         <sml:output name="gammaRadiation">
            <sml:DataInterface>
 
               <!-- data description -->
               <sml:data>
                  <swe:DataStream>
                     <swe:elementType name="gamaRadiation">
                        <swe:DataRecord>
                            <swe:field name="averageDose">
                                <swe:Quantity definition="http://sensorml.com/ont/swe/property/DoseRate.html">
                                    <swe:label>Average Dose of Gamma Radiation</swe:label>
                                    <swe:uom code="uR/min"/>
                                </swe:Quantity>
                            </swe:field>
                            <swe:field name="InstantaneousDose">
                                <swe:Quantity definition="http://sensorml.com/ont/swe/property/RadiationDose">
                                    <swe:label>Instantaneous Dose of Gamma Radiation</swe:label>
                                    <swe:uom code="uR"/>
                                </swe:Quantity>
                            </swe:field>
                        </swe:DataRecord>
                     </swe:elementType>
 
                     <!-- encoding description -->
                     <swe:encoding>
                        <swe:TextEncoding tokenSeparator="," blockSeparator=" "/>
                     </swe:encoding>
                      
                     <!-- a Real-Time-Protocol (RTP) server that continues to stream real time measurements -->
                     <swe:values xlink:href="rtp://myServer.com:4563/sensor/02080"/>
 
                  </swe:DataStream>
               </sml:data>
            </sml:DataInterface>
         </sml:output>
      </sml:OutputList>
   </sml:outputs>
   <!-- ================================================= -->
   <!--                  Station Location                 -->
   <!-- ================================================= -->
   <sml:position>
      <gml:Point gml:id="stationLocation" srsName="http://www.opengis.net/def/crs/EPSG/0/4326">
         <gml:coordinates>47.8 88.56</gml:coordinates>
      </gml:Point>
   </sml:position>
</sml:PhysicalComponent>

 

The encoding of this data stream is specified in the SensorML description as TextEncoding with a comma separating tokens (or fields) and a space separating blocks (or records). A stream of measurement returned by the URL might look like:

   7248,26.3 7248,26.4 7250,26.6 7251,28.3 ...

